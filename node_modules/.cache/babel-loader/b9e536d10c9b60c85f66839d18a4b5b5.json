{"ast":null,"code":"import _objectSpread from \"/Users/bethany/Desktop/basicRPG 2/basic-rpg/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/bethany/Desktop/basicRPG 2/basic-rpg/src/features/player/index.js\";\nimport React, { Component } from \"react\";\nimport walkSprite from \"./player_walk.png\";\nimport { connect } from \"react-redux\";\nimport handleMovement from \"./movement\";\n\nclass Player extends Component {\n  handleMovement(player) {\n    function getNewPosition(oldPosition, direction) {\n      switch (direction) {\n        case \"WEST\":\n          return [oldPosition[0] - SPRITE_SIZE, oldPosition[1]];\n\n        case \"EAST\":\n          return [oldPosition[0] + SPRITE_SIZE, oldPosition[1]];\n\n        case \"NORTH\":\n          return [oldPosition[0], oldPosition[1] - SPRITE_SIZE];\n\n        case \"SOUTH\":\n          return [oldPosition[0], oldPosition[1] + SPRITE_SIZE];\n\n        default:\n          return console.log(\"oi mate\");\n      }\n    }\n\n    function observeBoundaries(oldPosition, newPosition) {\n      return newPosition[0] >= 0 && newPosition[0] <= MAP_WIDTH - SPRITE_SIZE && newPosition[1] >= 0 && newPosition[1] <= MAP_HEIGHT - SPRITE_SIZE;\n    }\n\n    function observeImpassable(oldPosition, newPosition) {\n      const tiles = store.getState().map.tiles;\n      const y = newPosition[1] / SPRITE_SIZE;\n      const x = newPosition[0] / SPRITE_SIZE;\n      const nextTile = tiles[y][x];\n      return nextTile < 5;\n    }\n\n    function observeLocation(oldPosition, newPosition) {\n      const tiles = store.getState().map.tiles;\n      const y = newPosition[1] / SPRITE_SIZE;\n      const x = newPosition[0] / SPRITE_SIZE;\n      const nextTile = tiles[y][x]; // switch(nextTile) {\n      //     case 10:\n      //         return console.log('oi mate its the dorm')\n      //     default:\n      //         return console.log(\"boo\")\n      // }\n\n      return nextTile;\n    }\n\n    function dispatchMove(newPosition) {\n      store.dispatch({\n        type: \"MOVE_PLAYER\",\n        payload: {\n          position: newPosition\n        }\n      });\n    }\n\n    function attemptMove(direction) {\n      const oldPosition = store.getState().player.position;\n      const newPosition = getNewPosition(oldPosition, direction);\n\n      if (observeBoundaries(oldPosition, newPosition) && observeImpassable(oldPosition, newPosition)) {\n        dispatchMove(newPosition);\n      }\n\n      switch (observeLocation(oldPosition, newPosition)) {\n        case 10:\n          console.log(\"oi mate its the dorm\");\n          return this.props.history.push(\"/dorm\");\n        // break;\n\n        case 11:\n          console.log(\"SHHHHHH ITS THE FUCKING LIBRARY\");\n          break;\n\n        case 12:\n          console.log(\"SIG EP SIG EP\");\n          break;\n\n        case 13:\n          console.log(\"get swol bruh\");\n          break;\n\n        case 14:\n          console.log(\"num nums motherfucker\");\n          break;\n\n        default:\n          return console.log(\"moving\");\n      }\n    }\n\n    function handleKeyDown(e) {\n      e.preventDefault();\n\n      switch (e.keyCode) {\n        case 37:\n          return attemptMove(\"WEST\");\n\n        case 38:\n          return attemptMove(\"NORTH\");\n\n        case 39:\n          return attemptMove(\"EAST\");\n\n        case 40:\n          return attemptMove(\"SOUTH\");\n\n        default:\n          console.log(e.keyCode);\n      }\n    }\n\n    window.addEventListener(\"keydown\", e => {\n      handleKeyDown(e);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: this.props.position[1],\n        left: this.props.position[0],\n        backgroundImage: \"url('\".concat(walkSprite, \"')\"),\n        backgroundPosition: \"0 0\",\n        width: \"40px\",\n        height: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return _objectSpread({}, state.player);\n}\n\nexport default connect(mapStateToProps)(handleMovement(Player));","map":{"version":3,"sources":["/Users/bethany/Desktop/basicRPG 2/basic-rpg/src/features/player/index.js"],"names":["React","Component","walkSprite","connect","handleMovement","Player","player","getNewPosition","oldPosition","direction","SPRITE_SIZE","console","log","observeBoundaries","newPosition","MAP_WIDTH","MAP_HEIGHT","observeImpassable","tiles","store","getState","map","y","x","nextTile","observeLocation","dispatchMove","dispatch","type","payload","position","attemptMove","props","history","push","handleKeyDown","e","preventDefault","keyCode","window","addEventListener","render","top","left","backgroundImage","backgroundPosition","width","height","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport walkSprite from \"./player_walk.png\";\nimport { connect } from \"react-redux\";\nimport handleMovement from \"./movement\";\n\nclass Player extends Component {\n  handleMovement(player) {\n    function getNewPosition(oldPosition, direction) {\n      switch (direction) {\n        case \"WEST\":\n          return [oldPosition[0] - SPRITE_SIZE, oldPosition[1]];\n        case \"EAST\":\n          return [oldPosition[0] + SPRITE_SIZE, oldPosition[1]];\n        case \"NORTH\":\n          return [oldPosition[0], oldPosition[1] - SPRITE_SIZE];\n        case \"SOUTH\":\n          return [oldPosition[0], oldPosition[1] + SPRITE_SIZE];\n        default:\n          return console.log(\"oi mate\");\n      }\n    }\n\n    function observeBoundaries(oldPosition, newPosition) {\n      return (\n        newPosition[0] >= 0 &&\n        newPosition[0] <= MAP_WIDTH - SPRITE_SIZE &&\n        (newPosition[1] >= 0 && newPosition[1] <= MAP_HEIGHT - SPRITE_SIZE)\n      );\n    }\n\n    function observeImpassable(oldPosition, newPosition) {\n      const tiles = store.getState().map.tiles;\n      const y = newPosition[1] / SPRITE_SIZE;\n      const x = newPosition[0] / SPRITE_SIZE;\n      const nextTile = tiles[y][x];\n      return nextTile < 5;\n    }\n\n    function observeLocation(oldPosition, newPosition) {\n      const tiles = store.getState().map.tiles;\n      const y = newPosition[1] / SPRITE_SIZE;\n      const x = newPosition[0] / SPRITE_SIZE;\n      const nextTile = tiles[y][x];\n      // switch(nextTile) {\n      //     case 10:\n      //         return console.log('oi mate its the dorm')\n      //     default:\n      //         return console.log(\"boo\")\n      // }\n      return nextTile;\n    }\n\n    function dispatchMove(newPosition) {\n      store.dispatch({\n        type: \"MOVE_PLAYER\",\n        payload: {\n          position: newPosition\n        }\n      });\n    }\n\n    function attemptMove(direction) {\n      const oldPosition = store.getState().player.position;\n      const newPosition = getNewPosition(oldPosition, direction);\n\n      if (\n        observeBoundaries(oldPosition, newPosition) &&\n        observeImpassable(oldPosition, newPosition)\n      ) {\n        dispatchMove(newPosition);\n      }\n      switch (observeLocation(oldPosition, newPosition)) {\n        case 10:\n          console.log(\"oi mate its the dorm\");\n          return this.props.history.push(\"/dorm\");\n        // break;\n        case 11:\n          console.log(\"SHHHHHH ITS THE FUCKING LIBRARY\");\n          break;\n        case 12:\n          console.log(\"SIG EP SIG EP\");\n          break;\n        case 13:\n          console.log(\"get swol bruh\");\n          break;\n        case 14:\n          console.log(\"num nums motherfucker\");\n          break;\n        default:\n          return console.log(\"moving\");\n      }\n    }\n\n    function handleKeyDown(e) {\n      e.preventDefault();\n\n      switch (e.keyCode) {\n        case 37:\n          return attemptMove(\"WEST\");\n        case 38:\n          return attemptMove(\"NORTH\");\n        case 39:\n          return attemptMove(\"EAST\");\n        case 40:\n          return attemptMove(\"SOUTH\");\n        default:\n          console.log(e.keyCode);\n      }\n    }\n\n    window.addEventListener(\"keydown\", e => {\n      handleKeyDown(e);\n    });\n  }\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          top: this.props.position[1],\n          left: this.props.position[0],\n          backgroundImage: `url('${walkSprite}')`,\n          backgroundPosition: \"0 0\",\n          width: \"40px\",\n          height: \"40px\"\n        }}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.player\n  };\n}\n\nexport default connect(mapStateToProps)(handleMovement(Player));\n"]},"metadata":{},"sourceType":"module"}