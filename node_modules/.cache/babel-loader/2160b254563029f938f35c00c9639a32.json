{"ast":null,"code":"var _jsxFileName = \"/Users/bethany/Desktop/basicRPG 2/basic-rpg/src/features/player/movement.js\";\nimport store from \"../../config/store\";\nimport { SPRITE_SIZE, MAP_WIDTH, MAP_HEIGHT } from \"../../config/constants\";\nimport React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport Dorm from \"../../components/Dorm\";\nexport default function handleMovement(player) {\n  function getNewPosition(oldPosition, direction) {\n    switch (direction) {\n      case \"WEST\":\n        return [oldPosition[0] - SPRITE_SIZE, oldPosition[1]];\n\n      case \"EAST\":\n        return [oldPosition[0] + SPRITE_SIZE, oldPosition[1]];\n\n      case \"NORTH\":\n        return [oldPosition[0], oldPosition[1] - SPRITE_SIZE];\n\n      case \"SOUTH\":\n        return [oldPosition[0], oldPosition[1] + SPRITE_SIZE];\n\n      default:\n        return console.log(\"oi mate\");\n    }\n  }\n\n  function observeBoundaries(oldPosition, newPosition) {\n    return newPosition[0] >= 0 && newPosition[0] <= MAP_WIDTH - SPRITE_SIZE && newPosition[1] >= 0 && newPosition[1] <= MAP_HEIGHT - SPRITE_SIZE;\n  }\n\n  function observeImpassable(oldPosition, newPosition) {\n    const tiles = store.getState().map.tiles;\n    const y = newPosition[1] / SPRITE_SIZE;\n    const x = newPosition[0] / SPRITE_SIZE;\n    const nextTile = tiles[y][x];\n    return nextTile < 5;\n  }\n\n  function observeLocation(oldPosition, newPosition) {\n    const tiles = store.getState().map.tiles;\n    const y = newPosition[1] / SPRITE_SIZE;\n    const x = newPosition[0] / SPRITE_SIZE;\n    const nextTile = tiles[y][x]; // switch(nextTile) {\n    //     case 10:\n    //         return console.log('oi mate its the dorm')\n    //     default:\n    //         return console.log(\"boo\")\n    // }\n\n    return nextTile;\n  }\n\n  function dispatchMove(newPosition) {\n    store.dispatch({\n      type: \"MOVE_PLAYER\",\n      payload: {\n        position: newPosition\n      }\n    });\n  }\n\n  function attemptMove(direction) {\n    const oldPosition = store.getState().player.position;\n    const newPosition = getNewPosition(oldPosition, direction);\n\n    if (observeBoundaries(oldPosition, newPosition) && observeImpassable(oldPosition, newPosition)) {\n      dispatchMove(newPosition);\n    }\n\n    switch (observeLocation(oldPosition, newPosition)) {\n      case 10:\n        console.log(\"oi mate its the dorm\");\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/dorm\",\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      // break;\n\n      case 11:\n        console.log(\"SHHHHHH ITS THE FUCKING LIBRARY\");\n        break;\n\n      case 12:\n        console.log(\"SIG EP SIG EP\");\n        break;\n\n      case 13:\n        console.log(\"get swol bruh\");\n        break;\n\n      case 14:\n        console.log(\"num nums motherfucker\");\n        break;\n\n      default:\n        return console.log(\"moving\");\n    }\n  }\n\n  function handleKeyDown(e) {\n    e.preventDefault();\n\n    switch (e.keyCode) {\n      case 37:\n        return attemptMove(\"WEST\");\n\n      case 38:\n        return attemptMove(\"NORTH\");\n\n      case 39:\n        return attemptMove(\"EAST\");\n\n      case 40:\n        return attemptMove(\"SOUTH\");\n\n      default:\n        console.log(e.keyCode);\n    }\n  }\n\n  window.addEventListener(\"keydown\", e => {\n    handleKeyDown(e);\n  });\n  return player;\n}","map":{"version":3,"sources":["/Users/bethany/Desktop/basicRPG 2/basic-rpg/src/features/player/movement.js"],"names":["store","SPRITE_SIZE","MAP_WIDTH","MAP_HEIGHT","React","Router","Dorm","handleMovement","player","getNewPosition","oldPosition","direction","console","log","observeBoundaries","newPosition","observeImpassable","tiles","getState","map","y","x","nextTile","observeLocation","dispatchMove","dispatch","type","payload","position","attemptMove","pathname","state","from","props","location","handleKeyDown","e","preventDefault","keyCode","window","addEventListener"],"mappings":"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","sourcesContent":["import store from \"../../config/store\";\nimport { SPRITE_SIZE, MAP_WIDTH, MAP_HEIGHT } from \"../../config/constants\";\nimport React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport Dorm from \"../../components/Dorm\";\n\nexport default function handleMovement(player) {\n  function getNewPosition(oldPosition, direction) {\n    switch (direction) {\n      case \"WEST\":\n        return [oldPosition[0] - SPRITE_SIZE, oldPosition[1]];\n      case \"EAST\":\n        return [oldPosition[0] + SPRITE_SIZE, oldPosition[1]];\n      case \"NORTH\":\n        return [oldPosition[0], oldPosition[1] - SPRITE_SIZE];\n      case \"SOUTH\":\n        return [oldPosition[0], oldPosition[1] + SPRITE_SIZE];\n      default:\n        return console.log(\"oi mate\");\n    }\n  }\n\n  function observeBoundaries(oldPosition, newPosition) {\n    return (\n      newPosition[0] >= 0 &&\n      newPosition[0] <= MAP_WIDTH - SPRITE_SIZE &&\n      (newPosition[1] >= 0 && newPosition[1] <= MAP_HEIGHT - SPRITE_SIZE)\n    );\n  }\n\n  function observeImpassable(oldPosition, newPosition) {\n    const tiles = store.getState().map.tiles;\n    const y = newPosition[1] / SPRITE_SIZE;\n    const x = newPosition[0] / SPRITE_SIZE;\n    const nextTile = tiles[y][x];\n    return nextTile < 5;\n  }\n\n  function observeLocation(oldPosition, newPosition) {\n    const tiles = store.getState().map.tiles;\n    const y = newPosition[1] / SPRITE_SIZE;\n    const x = newPosition[0] / SPRITE_SIZE;\n    const nextTile = tiles[y][x];\n    // switch(nextTile) {\n    //     case 10:\n    //         return console.log('oi mate its the dorm')\n    //     default:\n    //         return console.log(\"boo\")\n    // }\n    return nextTile;\n  }\n\n  function dispatchMove(newPosition) {\n    store.dispatch({\n      type: \"MOVE_PLAYER\",\n      payload: {\n        position: newPosition\n      }\n    });\n  }\n\n  function attemptMove(direction) {\n    const oldPosition = store.getState().player.position;\n    const newPosition = getNewPosition(oldPosition, direction);\n\n    if (\n      observeBoundaries(oldPosition, newPosition) &&\n      observeImpassable(oldPosition, newPosition)\n    ) {\n      dispatchMove(newPosition);\n    }\n    switch (observeLocation(oldPosition, newPosition)) {\n      case 10:\n        console.log(\"oi mate its the dorm\");\n        return (\n          <Redirect\n            to={{\n              pathname: \"/dorm\",\n              state: { from: props.location }\n            }}\n          />\n        );\n      // break;\n      case 11:\n        console.log(\"SHHHHHH ITS THE FUCKING LIBRARY\");\n        break;\n      case 12:\n        console.log(\"SIG EP SIG EP\");\n        break;\n      case 13:\n        console.log(\"get swol bruh\");\n        break;\n      case 14:\n        console.log(\"num nums motherfucker\");\n        break;\n      default:\n        return console.log(\"moving\");\n    }\n  }\n\n  function handleKeyDown(e) {\n    e.preventDefault();\n\n    switch (e.keyCode) {\n      case 37:\n        return attemptMove(\"WEST\");\n      case 38:\n        return attemptMove(\"NORTH\");\n      case 39:\n        return attemptMove(\"EAST\");\n      case 40:\n        return attemptMove(\"SOUTH\");\n      default:\n        console.log(e.keyCode);\n    }\n  }\n\n  window.addEventListener(\"keydown\", e => {\n    handleKeyDown(e);\n  });\n\n  return player;\n}\n"]},"metadata":{},"sourceType":"module"}